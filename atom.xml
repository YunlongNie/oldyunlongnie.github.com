<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[YL's Blog]]></title>
  <link href="http://YunlongNie.github.io/atom.xml" rel="self"/>
  <link href="http://YunlongNie.github.io/"/>
  <updated>2013-07-19T02:37:00-07:00</updated>
  <id>http://YunlongNie.github.io/</id>
  <author>
    <name><![CDATA[joha]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Redirect personal website to here]]></title>
    <link href="http://YunlongNie.github.io/blog/2013/07/19/redirect-personal-website-to-here/"/>
    <updated>2013-07-19T02:30:00-07:00</updated>
    <id>http://YunlongNie.github.io/blog/2013/07/19/redirect-personal-website-to-here</id>
    <content type="html"><![CDATA[<h3>my old personal website is <code>stat.ubc.ca/~yunlong.nie</code> and when visitors come to this web page, I&rsquo;d like to guide them to this new blog automatically.</h3>

<p>Here we need to make use <code>.haccess</code> file.</p>

<pre><code>      $ cd public_html/
      $ vi .haccess
      # put the following code into this file
      Redirect 301 /~yunlong.nie/ http://yunlongnie.github.io/
</code></pre>

<p>Bingo! This <a href="http://www.uvm.edu/webguide/?Page=redirects.html&amp;SM=urlsubmenu.html">website</a> has more details.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Find by file extension and do sth]]></title>
    <link href="http://YunlongNie.github.io/blog/2013/07/19/find-by-file-extension-and-do-sth/"/>
    <updated>2013-07-19T00:03:00-07:00</updated>
    <id>http://YunlongNie.github.io/blog/2013/07/19/find-by-file-extension-and-do-sth</id>
    <content type="html"><![CDATA[<h3>say we wanna find all the file with the same extension within one folder and do sth else</h3>

<pre><code>     cd ~/Downloads;
     find . -iname "*.mp3" -exec mv {}  ~/Dropbox/OwnCloud/mp3/ \;
     # first locate all the files with .mp3 then mv to a new folder

     find . -iname "*.mp3" -exec rm {}  \;
     # first locate all the files with .mp3 then delete them all
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Make an existing folder into a new github repo]]></title>
    <link href="http://YunlongNie.github.io/blog/2013/07/18/make-an-existing-folder-into-a-new-github-repo/"/>
    <updated>2013-07-18T22:43:00-07:00</updated>
    <id>http://YunlongNie.github.io/blog/2013/07/18/make-an-existing-folder-into-a-new-github-repo</id>
    <content type="html"><![CDATA[<p>I am quite new to Github and it took me 2 days to get into it. Just keep a record for future reference. ### Say if you have a foler on your machine and you&rsquo;d like to creat a new repo on github server.</p>

<h3>* suppose your local folder is <code>~/myfold/</code>. The first thing we do is to creat a repo on github server we call it <code>myfold</code>.</h3>

<h3>* next we add this folder to the server.</h3>

<pre><code>    $ git init
    # initialise a git
    $ git add .
    $ git commit -m "your comment"
    # commit the files
    $ git remote add origin https://github.com/YunlongNie/myfolder.git
    # point origin to the myfolder.git repo
    $ git push -u origin master
</code></pre>

<p>*### note that some time you may like to <strong>remove</strong> or <strong>rename</strong> the origin</p>

<pre><code>    $git remote rename &lt;old&gt; &lt;new&gt;
    $git remote remove &lt;name&gt;
</code></pre>

<p>Check out this website about <a href="http://git-scm.com/docs/git-remote">git-remote</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tag Cloud]]></title>
    <link href="http://YunlongNie.github.io/blog/2013/07/18/tag-cloud/"/>
    <updated>2013-07-18T19:07:00-07:00</updated>
    <id>http://YunlongNie.github.io/blog/2013/07/18/tag-cloud</id>
    <content type="html"><![CDATA[<p>see the <a href="http://codemacro.com/2012/07/18/add-tag-to-octopress/">tutorial</a> here</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Theme]]></title>
    <link href="http://YunlongNie.github.io/blog/2013/07/18/theme/"/>
    <updated>2013-07-18T14:14:00-07:00</updated>
    <id>http://YunlongNie.github.io/blog/2013/07/18/theme</id>
    <content type="html"><![CDATA[<h2>Bootstrap Theme</h2>

<p>The theme of this website is <a href="://github.com/bkutil/bootstrap-theme">bootstrap</a>.
The code for installation is</p>

<pre><code>    $ git clone git://github.com/bkutil/bootstrap-theme.git source/.themes/bootstrap
    $ rake install['bootstrap']
    $ rake generate
</code></pre>

<p>There are other themes on this <a href="http://opthemes.com/">website</a>. Some of them are very cool actually. Check it out!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SideBar]]></title>
    <link href="http://YunlongNie.github.io/blog/2013/07/18/sidebar/"/>
    <updated>2013-07-18T12:14:00-07:00</updated>
    <id>http://YunlongNie.github.io/blog/2013/07/18/sidebar</id>
    <content type="html"><![CDATA[<h2>where to edit</h2>

<p>*There is a <code>about.html</code> in directory <code>source/_include/custom/asides/about.html</code>. First give this file some content.</p>

<p>*Then edit <code>_config.yml</code>, there is a defaul asides setting: add cutom/asides/about.html inside</p>

<pre><code>    default_asides: [custom/asides/about.html,asides/recent_posts.html, asides/github.html, asides/delicious.html, asides/pinboard.html, asides/googleplus.html]
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to add a page on the navigation bar]]></title>
    <link href="http://YunlongNie.github.io/blog/2013/07/18/how-to-add-a-page-on-the-navigation-bar/"/>
    <updated>2013-07-18T00:21:00-07:00</updated>
    <id>http://YunlongNie.github.io/blog/2013/07/18/how-to-add-a-page-on-the-navigation-bar</id>
    <content type="html"><![CDATA[<h2>Big picture</h2>

<p>The aim is to add links to the main navigation bar, the source page needs to be edited &lsquo;/source/_includes/custom/navigation.html&rsquo; which looks like:</p>

<pre><code>    &lt;ul class="main-navigation"&gt;
    &lt;li&gt;&lt;a href="http://YunlongNie.github.io/"&gt;Blog&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="http://YunlongNie.github.io/archives"&gt;Archives&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
</code></pre>

<p>for example you want to add a &lsquo;About me&rsquo; pages just add another line there like:</p>

<pre><code>    &lt;li&gt;&lt;a href="http://YunlongNie.github.io/about"&gt;Archives&lt;/a&gt;&lt;/li&gt;
</code></pre>

<p>but you do need to add a &lsquo;about&rsquo; page in your root directory, that is, under the folder &lsquo;source/&rsquo;, the details can be found in this <a href="http://octopress.org/docs/blogging">page</a>.</p>

<pre><code>    rake new_page[about]
    # it will creat source/about/index.markdown
    rake new_page[about.markdowm]
    # it will creat source/about.markdown
</code></pre>

<p>Notice the difference between these two.</p>

<h2>Step by Step</h2>

<p>here we will show how to add a page say TA in the navigation bar step by step.</p>

<ol>
<li><p>first creat a page called &lsquo;TA&rsquo; under source</p>

<pre><code> rake new_page[TA]
 # this will creat source/TA/index.markdown
</code></pre></li>
<li><p>edit the index.markdown as you want</p></li>
<li><p>creat a item in the &lsquo;/source/_includes/custom/navigation.html&rsquo; and make it like this:</p>

<pre><code> &lt;ul class="main-navigation"&gt;
 &lt;li&gt;&lt;a href="http://YunlongNie.github.io/"&gt;Blog&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href="http://YunlongNie.github.io/archives"&gt;Archives&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href="http://YunlongNie.github.io/TA"&gt;TA&lt;/a&gt;&lt;/li&gt;
 &lt;/ul&gt;
</code></pre></li>
<li><p>then generate all the site and push to your github account.</p>

<pre><code> rake generate
 rake preview
 rake deploy
</code></pre></li>
</ol>


<h2>Done!</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Login without password]]></title>
    <link href="http://YunlongNie.github.io/blog/2013/07/17/login-without-password/"/>
    <updated>2013-07-17T02:12:00-07:00</updated>
    <id>http://YunlongNie.github.io/blog/2013/07/17/login-without-password</id>
    <content type="html"><![CDATA[<p>say you wanna log into a linux server to do some job. But every time it requires you enter the password, which at least I feel annoying. Here is a way you can generate a key and login without password.</p>

<p>Suppose we call the local machine A and server as B. Of course, you should have a account for B, say joha@B and password: thissiapassword.</p>

<h1>How?</h1>

<ol>
<li><p>first suppose you are on A already and you need to generate a pair of authentication keys. Do not enter any passphrase.
<code>ssh-keygen -t rsa</code></p></li>
<li><p>Defaultly, it will creat a key in ~/.ssh/.</p></li>
<li><p>use ssh to creat a folder ~/.ssh as use joha on B. if the folder already exits, it&rsquo;s ok.
<code>ssh joha@B mkdir -p .ssh</code>
enter the password for B.</p></li>
<li><p>append A&rsquo;s new public key to joha@B:.ssh/authorized_keys and enter the password for b again.
<code>cat .ssh/id_rsa.pub | ssh joha@B 'cat &gt;&gt; .ssh/authorized keys</code></p></li>
<li><p>then you can login B without password
<code>ssh joha@B</code></p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[github with jeklly boostrap]]></title>
    <link href="http://YunlongNie.github.io/blog/2013/07/17/how-to-bulid-this-blog/"/>
    <updated>2013-07-17T01:51:00-07:00</updated>
    <id>http://YunlongNie.github.io/blog/2013/07/17/how-to-bulid-this-blog</id>
    <content type="html"><![CDATA[<p>This is a record about how I set up this blog and because this is quite new to me, it&rsquo;s probably a good idea to write the whole process down for reference in the future.</p>

<h2>Preparation</h2>

<ul>
<li>first set up an account in <a href="https://github.com/">github</a>. You can follow the tutorial <a href="https://help.github.com/articles/set-up-git">here</a>.</li>
<li>highly recommend you <a href="https://help.github.com/articles/generating-ssh-keys">set up the ssh key</a> too.</li>
</ul>


<h2>Creat your website repo</h2>

<p>next creat a repo called USERNAMR.github.com. In my case, since my username is YunlongNie. It will be <a href="&#x6d;&#x61;&#105;&#108;&#116;&#x6f;&#x3a;&#121;&#x75;&#x6e;&#108;&#x6f;&#x6e;&#x67;&#110;&#105;&#x65;&#x40;&#x67;&#x69;&#116;&#x68;&#x75;&#98;&#46;&#x63;&#x6f;&#x6d;&#46;">&#121;&#117;&#x6e;&#x6c;&#111;&#x6e;&#x67;&#x6e;&#x69;&#101;&#x40;&#103;&#105;&#116;&#x68;&#x75;&#98;&#x2e;&#x63;&#x6f;&#x6d;&#46;</a> You have two choices here.</p>

<ul>
<li>a simple one is to make use of <a href="http://pages.github.com/">github pages</a>.</li>
<li>a less simple one is to use <a href="http://jekyllbootstrap.com/">jeklly boostrap</a>.  Next I will focus on this option.</li>
</ul>


<h3>install jekyll-boostrap</h3>

<pre><code>    $ git clone https://github.com/plusjade/jekyll-bootstrap.git USERNAME.github.com  
    $ cd USERNAME.github.com 
    $ git remote set-url origin git@github.com:USERNAME/USERNAME.github.com.git  
    $ git push origin master
</code></pre>

<h3>check out your wesite in the local browser.</h3>

<p>Go to the folder USENAME.github.com first.</p>

<pre><code>    $ cd USERNAME.git.hub.com
    $ jeklly  server
</code></pre>

<p>You can check it out on this website <a href="http://localhost:4000/">http://localhost:4000/</a>.
If you have no Ruby and RubyGems intalled. Go to <a href="http://jekyllrb.com/">jekyll</a> webiste and there is a page for <a href="http://jekyllrb.com/docs/installation/">isntallation</a>.</p>

<h3>how to post?</h3>

<p>Notice there is a rakefile in your USERNAME.github.com folder. You <strong>must</strong> have this file to creat a new post.</p>

<pre><code>    $ cd USENAME.github.com
    $ rake post title="your title"
</code></pre>

<p>the codes above will creat a markdown file in the folder <code>\_post/</code> with a filename yyyy-mm-dd-title.md, say 2013-7-16-first-blog.md. The contents will be like blow.</p>

<pre><code>    layout: post
    title: "your title "
    description: ""
    category: 
    tags: [ ]
</code></pre>

<p>then you can edit this md file to make a post. For example, set up your categories and tags.</p>

<h3>update the post into remote repo in github</h3>

<p>remember all the things we have done so far updates only on your local machine and you can only see it from <a href="http://localhost:4000/">local server</a>. Next we will try to make them online so anyone can see your website on <a href="http://USERNAME.github.io/.">http://USERNAME.github.io/.</a></p>

<ul>
<li>first make sure you set up a repo in github called exactly USERNAME.github.com.</li>
<li><p>commit your local changes with a comment.</p>

<pre><code>  $git remote set-url origin git@github.com:USERNAME/USERNAME.github.com.git
  $git add .
  $git commit -m "your comment"
</code></pre></li>
<li><p>push the master</p>

<pre><code> $git push origin master
</code></pre></li>
</ul>


<p>check out if your files in the github repo get updated.</p>

<h3>merge the files in the remote server with local files.</h3>

<p>some times files are edited directly on github repo, making the files on server latest version. You need to <strong>merge</strong> the data from remote server into your local machine.</p>

<pre><code>   $git pull origin master 
</code></pre>
]]></content>
  </entry>
  
</feed>
